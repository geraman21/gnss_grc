id: gnss_channel_starter
label: Channel Starter
category: "[gnss]"

templates:
  imports: import gnss
  make: gnss.channel_starter(${attempts}, ${s_sampleFreq})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
  - id: s_sampleFreq
    label: Sampling Frequency
    dtype: float
    default: samp_rate
  - id: attempts
    label: Attempts
    dtype: int
    default: 10
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
  - domain: message
    id: data_vector
    optional: true
    hide: false

outputs:
  - domain: message
    id: acquisition
    optional: true
    hide: false

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
